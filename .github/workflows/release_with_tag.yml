name: Release with Tag

on:
  push:
    tags:
      - '*'

jobs:
  ## ======================================================================================================
  upload_asset_windows:
    name: Upload Asset on Windows
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.1
        with:
            vs-version: 17

      - name: Run Buildscript
        run: ./build-on-windows.bat

      # - name: Print MD5
      #   run: 

      - name: Install packages
        run: choco install 7zip.portable

      - name: Run Zip
        run: 7z a -r lib.zip libsodium/bin

      - name: Upload Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: ./lib.zip
          asset_name: windows.zip
          asset_content_type: application/octet-stream

  ## ======================================================================================================
  upload_asset_linux:
    name: Upload Asset on Linux
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run Buildscript
        run: sh ./build-on-linux.sh

      # - name: Print MD5
      #   run: 

      - name: Run Zip
        run: zip -r lib.zip output/*

      - name: Upload Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: ./lib.zip
          asset_name: linux.zip
          asset_content_type: application/octet-stream

  ## ======================================================================================================
  upload_asset_android:
    needs: release
    name: Upload Asset on Linux (Android)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Android NDK
        uses: nttld/setup-ndk@v1
        with:
          ndk-version: r25c

      - name: Run Buildscript
        run: sh ./build-on-linux-android.sh

      # - name: Print MD5
      #   run: 

      - name: Run Zip
        run: zip -r lib.zip output/*

      - name: Upload Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: ./lib.zip
          asset_name: android.zip
          asset_content_type: application/octet-stream

  ## ======================================================================================================
  upload_asset_macos:
    name: Upload Asset on macOS
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Dependency
        run: brew install coreutils automake

      - name: Run Buildscript
        run: sh ./build-on-mac.sh

      # - name: Print MD5
      #   run: 

      - name: Run Zip
        run: zip -r lib.zip output/*

      - name: Upload Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: ./lib.zip
          asset_name: macos.zip
          asset_content_type: application/octet-stream

  upload_asset_apple_xcframework:
    name: Upload Asset on macOS (xcframework)
    # runs-on: macos-latest
    runs-on: macos-13
    steps:
      - name: Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '15.0'
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Dependency
        run: brew install coreutils automake

      - name: Run Buildscript
        run: sh ./build-on-mac-ios.sh

      # - name: Print MD5
      #   run: 

      - name: Run Zip
        run: zip -r lib.zip output/*

      - name: Upload Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: ./lib.zip
          asset_name: xcframework.zip
          asset_content_type: application/octet-stream

  ## ======================================================================================================
  release:
    needs: [upload_asset_windows, upload_asset_linux, upload_asset_macos, upload_asset_apple_xcframework]
    name: Write Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          sparse-checkout-cone-mode: false
          sparse-checkout: |
            CHANGELOG.md

      - name: Make Directory For Download Artifacts
        run: |
          mkdir -p download-artifacts

      - name: 🎁⏬ Download Artifact
        uses: actions/download-artifact@v4
        with:
          path: download-artifacts

      - name: Log artifact download
        run: |
          ls -alh
          ls -alh download-artifacts
    
      - name: Get Tagname
        ## ref: https://github.blog/changelog/2022-10-11-github-actions-deprecating-save-state-and-set-output-commands/
        ## echo "::set-output name={name}::{value}" (deprecated)
        ## echo "{name}={value}" >> $GITHUB_OUTPUT  (updated)
        id: tag_name
        run: |
          echo "current_version"="${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
        shell: bash

      - name: Changelog Reader
        id: changelog_reader
        uses: mindsers/changelog-reader-action@v2
        with:
          version: ${{ steps.tag_name.outputs.current_version }}
          path: ./CHANGELOG.md

      - name: Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          draft: false
          prerelease: false
          release_name: ${{ github.ref }}
          tag_name: ${{ github.ref }}
          body: ${{ steps.changelog_reader.outputs.changes }}

    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
